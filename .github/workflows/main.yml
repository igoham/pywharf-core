name: build-and-push

on:
  push:

jobs:

  ci:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python_version: ["3.7", "3.8"]

    steps:
      - uses: actions/checkout@v2

      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python_version }}

      - name: Setup pip/poetry
        run: |
          pip install -U pip poetry
          poetry config virtualenvs.create false

      - name: Install.
        run: poetry install

      - name: Test.
        run: pytest

      - name: Lint.
        run: |
          flake8 pywharf_core
          yapf -d -r pywharf_core

          flake8 pywharf_backends
          yapf -d -r pywharf_backends

          flake8 pywharf_testkit
          yapf -d -r pywharf_testkit

  publish:
    needs: [ci]
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest

    services:
      pywharf:
        image: pywharf/pywharf:0.2.1
        ports:
          - 8888:8888
        volumes:
          - pywharf-root:/pywharf-root
        env:
          PYWHARF_COMMAND: server
          PYWHARF_COMMAND_ROOT: /pywharf-root

    steps:
      - uses: actions/checkout@v2

      - name: Setup pywharf
        run: |
          echo "config=${CONFIG}&admin_secret=${ADMIN_SECRET}"
          curl \
            -d "config=${CONFIG}&admin_secret=${ADMIN_SECRET}" \
            -X POST \
            http://localhost:8888/initialize/
        env:
          CONFIG: |
            [pywharf-pkg-repo]
            type = "github"
            owner = "pywharf"
            repo = "pywharf-pkg-repo"
          ADMIN_SECRET: |
            [pywharf-pkg-repo]
            type = "github"
            raw = "${{ secrets.PYWHARF_PKG_REPO_TOKEN }}"

      - name: Setup python
        uses: actions/setup-python@v1
        with:
          python-version: "3.8"

      - name: Setup pip/poetry
        run: |
          pip install -U pip poetry twine
          poetry config virtualenvs.create false

      - name: Build wheel
        run: poetry build -f wheel

      - name: Publish to pywharf.
        run: twine upload --verbose --skip-existing --repository-url http://localhost:8888/simple/ dist/*
        env:
          TWINE_USERNAME: pywharf-pkg-repo
          TWINE_PASSWORD: ${{ secrets.PYWHARF_PKG_REPO_TOKEN }}

      - name: Publish to PyPI.
        run: twine upload --skip-existing dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
